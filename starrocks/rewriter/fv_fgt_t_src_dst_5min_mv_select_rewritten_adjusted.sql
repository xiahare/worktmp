

SELECT _adomoid,dvid,fv_timescale_func(itime,300,0) AS timescale,epid,coalesce(nullifna(user),nullifna(unauthuser)) AS f_user,`group` AS group_info,dev_src,srcmac,srcip,srcintf,srcintfrole,srcuuid,srcinetsvc,dstip,dstmac,dstintf,dstintfrole,dstuuid,dstowner,dstcountry,clientdevicetags,devtype,flags,d_flags,app_group,rulename,vwlid,domain,hostname,catdesc,policymode,policyid,policytype,poluuid,policyname,service,accessproxy,saasname,fctuid,MAX(avatar) AS avatar_state,MAX(epeuid) AS epeuid_state,MAX(dtime) AS logtime_state,MAX(threatlvl) AS threatlvl_state,SUM(threatwgt) AS threatweight_state,SUM(threat_block) AS threatblock_state,SUM(thwgt_cri) AS thwgt_cri_state,SUM(thwgt_hig) AS thwgt_hig_state,SUM(thwgt_med) AS thwgt_med_state,SUM(thwgt_low) AS thwgt_low_state,SUM(CAST(bandwidth AS BIGINT)) AS bandwidth_state,SUM(CAST(traffic_in AS BIGINT)) AS traffic_in_state,SUM(CAST(traffic_out AS BIGINT)) AS traffic_out_state,SUM(session_block) AS session_block_state,/*browseTimeStateArray(ebtime) AS browse_time_state,*/SUM(sessions) AS sessions_state FROM (SELECT itime,dvid,epid,_adomoid,_devlogtype,clientdevicetags,user,unauthuser,`group`,srcmac,srcip,srcintf,srcintfrole,srcuuid,srcname,srcinetsvc,coalesce(srcname,srcmac) AS dev_src,dstmac,dstip,dstintf,dstintfrole,dstuuid,dstowner,srcswversion,osname,devtype AS t_devtype,get_devtype(srcswversion,osname,devtype) AS devtype,dstcountry,app,vwlname,vwlservice,vwlid,catdesc,policymode,policyid,policytype,poluuid,policyname,service,coalesce(vwlname,vwlservice) AS rulename,app_group_name(app) AS app_group,logflag,CASE  WHEN (bitAnd(logflag,64)) > (0)  THEN hostname  ELSE root_domain(hostname)  END AS domain,hostname,accessproxy,saasname,fctuid,appcat,CASE  WHEN (bitAnd(logflag,64)) > (0)  THEN 2  ELSE 0  END AS flags_a,CASE  WHEN (appcat) = ('unscanned')  THEN 1  ELSE 0  END AS flags_b,bitOr(CASE  WHEN (bitAnd(logflag,64)) > (0)  THEN 2  ELSE 0  END,CASE  WHEN (appcat) = ('unscanned')  THEN 1  ELSE 0  END) AS flags,CASE  WHEN (appcat) = ('unscanned')  THEN 1  ELSE 0  END AS d_flags,CASE  WHEN (isNotNull(fctuid) AND isNotNull(unauthuser))  THEN CONCAT(CAST(fctuid AS STRING),',',unauthuser)  ELSE null  END AS avatar,CASE  WHEN ((epid) > (1023)  AND (euid) != (0) )  THEN CONCAT(CAST(epid AS STRING),',',CAST(euid AS STRING))  ELSE null  END AS epeuid,ebtime,dtime,threatlvls,threatwgts,threatcnts,threatlevel_max(threatlvls) AS threatlvl,threatweight_sum(threatwgts,threatcnts) AS threatwgt,CASE  WHEN (bitAnd(logflag,2)) > (0)  THEN threatweight_sum(threatwgts,threatcnts)  ELSE 0  END AS threat_block,threatweight_level_sum(4,threatlvls,threatcnts,threatwgts) AS thwgt_cri,threatweight_level_sum(3,threatlvls,threatcnts,threatwgts) AS thwgt_hig,threatweight_level_sum(2,threatlvls,threatcnts,threatwgts) AS thwgt_med,threatweight_level_sum(1,threatlvls,threatcnts,threatwgts) AS thwgt_low,sentbyte,rcvdbyte,sentdelta,rcvddelta,(coalesce(sentdelta,sentbyte,0)) + (coalesce(rcvddelta,rcvdbyte,0)) AS bandwidth,coalesce(rcvddelta,rcvdbyte,0) AS traffic_in,coalesce(sentdelta,sentbyte,0) AS traffic_out,CAST(CASE  WHEN (bitAnd(logflag,3)) = (3)  THEN 1  ELSE 0  END AS BIGINT) AS session_block,CAST(CASE  WHEN (bitAnd(logflag,1)) > (0)  THEN 1  ELSE 0  END AS BIGINT) AS sessions FROM (select adomid as _adomoid, 10 as _devlogtype, devid as dvid, * from __root_fgt_traffic) sp_table  WHERE ((bitAnd(logflag,bitOr(1,32))) > (0)  AND (_devlogtype) = (10) ) )  _sr_t_1  GROUP BY _adomoid,fv_timescale_func(itime,300,0),dvid,epid,coalesce(nullifna(user),nullifna(unauthuser)),`group`,devtype,srcmac,srcip,srcintf,srcintfrole,srcuuid,srcinetsvc,dev_src,dstip,dstmac,dstintf,dstintfrole,dstuuid,dstowner,dstcountry,app_group,rulename,vwlid,flags,d_flags,catdesc,policymode,policyid,policytype,poluuid,policyname,service,domain,hostname,fctuid,accessproxy,saasname,clientdevicetags


--
--
-- I tested fv_fgt_t_src_dst_5min with a few manual adjustments: 1) remove duplicate columns, 2) replace siem.tlog_sp$SPID with actual table name, 3) remove unsupported UDAF browseTimeStateArray(ebtime). however, it still cannot execute on .4, since a not found BE issue