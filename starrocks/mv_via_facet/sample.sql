-- clickhouse MV sql
CREATE MATERIALIZED VIEW IF NOT EXISTS siem.fv_fgt_t_src_dst_5min_mv_sp$SPID
TO siem.fv_fgt_t_src_dst_5min_sp$SPID
AS 

SELECT _adomoid, dvid,
       fv_timescale_func(itime, 300, 0) AS timescale,
       epid,
       coalesce(nullifna(user), nullifna(unauthuser)) AS f_user,
       `group` AS group_info,
       dev_src,
       srcmac,
       srcip,
       srcintf,
       srcintfrole,
       srcuuid,
       srcinetsvc,
       dstip,
       dstmac,
       dstintf,
       dstintfrole,
       dstuuid,
       dstowner,
       dstcountry,
       clientdevicetags,
       devtype,
       flags,
       d_flags,
       app_group,
       rulename,
       vwlid,
       domain,
       hostname,
       catdesc,
       policymode,
       policyid,
       policytype,
       poluuid,
       policyname,
       service,
       accessproxy,
       saasname,
       fctuid,
       maxState(avatar) AS avatar_state,
       maxState(epeuid) AS epeuid_state, maxState(dtime) AS logtime_state,
       maxState(threatlvl) AS threatlvl_state, sumState(threatwgt) AS threatweight_state,
       sumState(threat_block) AS threatblock_state,
       sumState(thwgt_cri) AS thwgt_cri_state, sumState(thwgt_hig) AS thwgt_hig_state,
       sumState(thwgt_med) AS thwgt_med_state, sumState(thwgt_low) AS thwgt_low_state,
       sumState(toInt64(bandwidth)) AS bandwidth_state, sumState(toInt64(traffic_in)) AS traffic_in_state,
       sumState(toInt64(traffic_out)) AS traffic_out_state, sumState(session_block) AS session_block_state,
       browseTimeStateArray(ebtime) AS browse_time_state,
       sumState(sessions) AS sessions_state
    FROM (
       SELECT
           itime,
           dvid,
           epid,
           _adomoid,
           _devlogtype,
           $LOGFIELD-clientdevicetags,
           $LOGFIELD-user,
           $LOGFIELD-unauthuser,
           $LOGFIELD-group,
           $LOGFIELD-srcmac,
           $LOGFIELD-srcip,
           $LOGFIELD-srcintf,
           $LOGFIELD-srcintfrole,
           $LOGFIELD-srcuuid,
           $LOGFIELD-srcname,
           $LOGFIELD-srcinetsvc,
           coalesce(srcname, srcmac) AS dev_src,
           $LOGFIELD-dstmac,
           $LOGFIELD-dstip,
           $LOGFIELD-dstintf,
           $LOGFIELD-dstintfrole,
           $LOGFIELD-dstuuid,
           $LOGFIELD-dstowner,
           $LOGFIELD-srcswversion,
           $LOGFIELD-osname,
           $LOGFIELD-devtype-t_devtype,
           get_devtype(srcswversion, osname, t_devtype) devtype,
           $LOGFIELD-dstcountry,
           $LOGFIELD-app, 
           $LOGFIELD-vwlname, 
           $LOGFIELD-vwlservice, 
           $LOGFIELD-vwlid,
           $LOGFIELD-catdesc,
           $LOGFIELD-policymode,
           $LOGFIELD-policyid,
           $LOGFIELD-policytype,
           $LOGFIELD-poluuid,
           $LOGFIELD-policyname,
           $LOGFIELD-service, coalesce(vwlname,vwlservice) AS rulename,
           app_group_name(app) AS app_group,
           $LOGFIELD-hostname,
           logflag, 
           $LOGFIELD-unauthuser,
           (CASE WHEN(bitAnd(logflag, 64) > 0) THEN hostname ELSE root_domain(hostname) END) AS domain, hostname,
           $LOGFIELD-accessproxy,
           $LOGFIELD-saasname,
           $LOGFIELD-fctuid,
           $LOGFIELD-appcat,
           multiIf(bitAnd(logflag, 64) > 0, 2, 0) AS flags_a,
           multiIf(appcat='unscanned',1,0) AS flags_b,
           bitOr(flags_a,flags_b) AS flags,
           (CASE WHEN appcat='unscanned' THEN 1 ELSE 0 END) AS d_flags, 
           (CASE WHEN $LOGFIELD_NOALIAS-fctuid IS NOT NULL AND unauthuser IS NOT NULL THEN CONCAT(toString($LOGFIELD_NOALIAS-fctuid), ',', unauthuser) ELSE NULL END) AS avatar,
           ( CASE WHEN epid > 1023 AND euid != 0 THEN CONCAT(toString(epid), ',', toString(euid)) ELSE NULL END) AS epeuid,
           $LOGFIELD-ebtime,
           dtime,
           $LOGFIELD-threatlvls,
           $LOGFIELD-threatwgts,
           $LOGFIELD-threatcnts,
           threatlevel_max(threatlvls) AS threatlvl,
           threatweight_sum(threatwgts, threatcnts) AS threatwgt,
           ( CASE WHEN(bitAnd(logflag, 2) > 0) THEN threatwgt ELSE 0 END) AS threat_block, 
           threatweight_level_sum(4,threatlvls,threatcnts,threatwgts) AS thwgt_cri,
           threatweight_level_sum(3,threatlvls,threatcnts,threatwgts) AS thwgt_hig,
           threatweight_level_sum(2,threatlvls,threatcnts,threatwgts) AS thwgt_med,
           threatweight_level_sum(1,threatlvls,threatcnts,threatwgts) AS thwgt_low,
           $LOGFIELD-sentbyte,
           $LOGFIELD-rcvdbyte, 
           $LOGFIELD-sentdelta,
           $LOGFIELD-rcvddelta,
           coalesce(sentdelta, sentbyte, 0)+coalesce(rcvddelta, rcvdbyte, 0) AS bandwidth,
           coalesce(rcvddelta, rcvdbyte, 0) AS traffic_in,
           coalesce(sentdelta, sentbyte, 0) AS traffic_out,
           CAST(( CASE WHEN(bitAnd(logflag, 2) > 0) THEN 1 ELSE 0 END), 'Int64') AS session_block, 
           CAST(( CASE WHEN(bitAnd(logflag, 1) > 0) THEN 1 ELSE 0 END), 'Int64') AS sessions
      FROM siem.tlog_sp$SPID
      WHERE bitAnd(logflag, bitOr(1, 32)) > 0 AND _devlogtype = 10
)
GROUP BY _adomoid, dvid, timescale,
     epid, f_user, group_info, devtype,
     srcmac, srcip, srcintf, srcintfrole, srcuuid, srcinetsvc, dev_src,
     dstip, dstmac, dstintf, dstintfrole, dstuuid, dstowner, dstcountry,
     app_group, rulename, vwlid, flags, d_flags, catdesc,
     policymode, policyid, policytype, poluuid, policyname,
     service, domain, hostname, fctuid,
     accessproxy, saasname, clientdevicetags;

-- Step1: parse 
SELECT _adomoid, dvid,
       fv_timescale_func(itime, 300, 0) AS timescale,
       epid,
       coalesce(nullifna(user), nullifna(unauthuser)) AS f_user,
       `group` AS group_info,
       dev_src,
       srcmac,
       srcip,
       srcintf,
       srcintfrole,
       srcuuid,
       srcinetsvc,
       dstip,
       dstmac,
       dstintf,
       dstintfrole,
       dstuuid,
       dstowner,
       dstcountry,
       clientdevicetags,
       devtype,
       flags,
       d_flags,
       app_group,
       rulename,
       vwlid,
       domain,
       hostname,
       catdesc,
       policymode,
       policyid,
       policytype,
       poluuid,
       policyname,
       service,
       accessproxy,
       saasname,
       fctuid,
       maxState(avatar) AS avatar_state,
       maxState(epeuid) AS epeuid_state, maxState(dtime) AS logtime_state,
       maxState(threatlvl) AS threatlvl_state, sumState(threatwgt) AS threatweight_state,
       sumState(threat_block) AS threatblock_state,
       sumState(thwgt_cri) AS thwgt_cri_state, sumState(thwgt_hig) AS thwgt_hig_state,
       sumState(thwgt_med) AS thwgt_med_state, sumState(thwgt_low) AS thwgt_low_state,
       sumState(toInt64(bandwidth)) AS bandwidth_state, sumState(toInt64(traffic_in)) AS traffic_in_state,
       sumState(toInt64(traffic_out)) AS traffic_out_state, sumState(session_block) AS session_block_state,
       browseTimeStateArray(ebtime) AS browse_time_state,
       sumState(sessions) AS sessions_state
    FROM (
       SELECT
           itime,
           dvid,
           epid,
           _adomoid,
           _devlogtype,
           $LOGFIELD-clientdevicetags,
           $LOGFIELD-user,
           $LOGFIELD-unauthuser,
           $LOGFIELD-group,
           $LOGFIELD-srcmac,
           $LOGFIELD-srcip,
           $LOGFIELD-srcintf,
           $LOGFIELD-srcintfrole,
           $LOGFIELD-srcuuid,
           $LOGFIELD-srcname,
           $LOGFIELD-srcinetsvc,
           coalesce(srcname, srcmac) AS dev_src,
           $LOGFIELD-dstmac,
           $LOGFIELD-dstip,
           $LOGFIELD-dstintf,
           $LOGFIELD-dstintfrole,
           $LOGFIELD-dstuuid,
           $LOGFIELD-dstowner,
           $LOGFIELD-srcswversion,
           $LOGFIELD-osname,
           $LOGFIELD-devtype-t_devtype,
           get_devtype(srcswversion, osname, t_devtype) devtype,
           $LOGFIELD-dstcountry,
           $LOGFIELD-app, 
           $LOGFIELD-vwlname, 
           $LOGFIELD-vwlservice, 
           $LOGFIELD-vwlid,
           $LOGFIELD-catdesc,
           $LOGFIELD-policymode,
           $LOGFIELD-policyid,
           $LOGFIELD-policytype,
           $LOGFIELD-poluuid,
           $LOGFIELD-policyname,
           $LOGFIELD-service, coalesce(vwlname,vwlservice) AS rulename,
           app_group_name(app) AS app_group,
           $LOGFIELD-hostname,
           logflag, 
           $LOGFIELD-unauthuser,
           (CASE WHEN(bitAnd(logflag, 64) > 0) THEN hostname ELSE root_domain(hostname) END) AS domain, hostname,
           $LOGFIELD-accessproxy,
           $LOGFIELD-saasname,
           $LOGFIELD-fctuid,
           $LOGFIELD-appcat,
           multiIf(bitAnd(logflag, 64) > 0, 2, 0) AS flags_a,
           multiIf(appcat='unscanned',1,0) AS flags_b,
           bitOr(flags_a,flags_b) AS flags,
           (CASE WHEN appcat='unscanned' THEN 1 ELSE 0 END) AS d_flags, 
           (CASE WHEN $LOGFIELD_NOALIAS-fctuid IS NOT NULL AND unauthuser IS NOT NULL THEN CONCAT(toString($LOGFIELD_NOALIAS-fctuid), ',', unauthuser) ELSE NULL END) AS avatar,
           ( CASE WHEN epid > 1023 AND euid != 0 THEN CONCAT(toString(epid), ',', toString(euid)) ELSE NULL END) AS epeuid,
           $LOGFIELD-ebtime,
           dtime,
           $LOGFIELD-threatlvls,
           $LOGFIELD-threatwgts,
           $LOGFIELD-threatcnts,
           threatlevel_max(threatlvls) AS threatlvl,
           threatweight_sum(threatwgts, threatcnts) AS threatwgt,
           ( CASE WHEN(bitAnd(logflag, 2) > 0) THEN threatwgt ELSE 0 END) AS threat_block, 
           threatweight_level_sum(4,threatlvls,threatcnts,threatwgts) AS thwgt_cri,
           threatweight_level_sum(3,threatlvls,threatcnts,threatwgts) AS thwgt_hig,
           threatweight_level_sum(2,threatlvls,threatcnts,threatwgts) AS thwgt_med,
           threatweight_level_sum(1,threatlvls,threatcnts,threatwgts) AS thwgt_low,
           $LOGFIELD-sentbyte,
           $LOGFIELD-rcvdbyte, 
           $LOGFIELD-sentdelta,
           $LOGFIELD-rcvddelta,
           coalesce(sentdelta, sentbyte, 0)+coalesce(rcvddelta, rcvdbyte, 0) AS bandwidth,
           coalesce(rcvddelta, rcvdbyte, 0) AS traffic_in,
           coalesce(sentdelta, sentbyte, 0) AS traffic_out,
           CAST(( CASE WHEN(bitAnd(logflag, 2) > 0) THEN 1 ELSE 0 END), 'Int64') AS session_block, 
           CAST(( CASE WHEN(bitAnd(logflag, 1) > 0) THEN 1 ELSE 0 END), 'Int64') AS sessions
      FROM ${var:source_data}
      WHERE bitAnd(logflag, bitOr(1, 32)) > 0 
)
GROUP BY _adomoid, dvid, timescale,
     epid, f_user, group_info, devtype,
     srcmac, srcip, srcintf, srcintfrole, srcuuid, srcinetsvc, dev_src,
     dstip, dstmac, dstintf, dstintfrole, dstuuid, dstowner, dstcountry,
     app_group, rulename, vwlid, flags, d_flags, catdesc,
     policymode, policyid, policytype, poluuid, policyname,
     service, domain, hostname, fctuid,
     accessproxy, saasname, clientdevicetags;


source_data: _devlogtype=10 -> __${storageId}_fgt_traffic
parse : version

-- Step2:
Init/Sync  facet_definition

-- Step3:
build

-- Step4: Query final - rewrite mv_name

mv_name -> 
select sum_sentbytes,... from facet_result_hour where hashId=10001
union ALL
select sum_sentbytes,... from facet_result_5min where hashId=10001
union ALL
SELECT _adomoid, dvid,
       fv_timescale_func(itime, 300, 0) AS timescale,
       epid,
       coalesce(nullifna(user), nullifna(unauthuser)) AS f_user,
       `group` AS group_info,
       dev_src,
       srcmac,
       srcip,
       srcintf,
       srcintfrole,
       srcuuid,
       srcinetsvc,
       dstip,
       dstmac,
       dstintf,
       dstintfrole,
       dstuuid,
       dstowner,
       dstcountry,
       clientdevicetags,
       devtype,
       flags,
       d_flags,
       app_group,
       rulename,
       vwlid,
       domain,
       hostname,
       catdesc,
       policymode,
       policyid,
       policytype,
       poluuid,
       policyname,
       service,
       accessproxy,
       saasname,
       fctuid,
       maxState(avatar) AS avatar_state,
       maxState(epeuid) AS epeuid_state, maxState(dtime) AS logtime_state,
       maxState(threatlvl) AS threatlvl_state, sumState(threatwgt) AS threatweight_state,
       sumState(threat_block) AS threatblock_state,
       sumState(thwgt_cri) AS thwgt_cri_state, sumState(thwgt_hig) AS thwgt_hig_state,
       sumState(thwgt_med) AS thwgt_med_state, sumState(thwgt_low) AS thwgt_low_state,
       sumState(toInt64(bandwidth)) AS bandwidth_state, sumState(toInt64(traffic_in)) AS traffic_in_state,
       sumState(toInt64(traffic_out)) AS traffic_out_state, sumState(session_block) AS session_block_state,
       browseTimeStateArray(ebtime) AS browse_time_state,
       sumState(sessions) AS sessions_state
    FROM (
       SELECT
           itime,
           dvid,
           epid,
           _adomoid,
           _devlogtype,
           $LOGFIELD-clientdevicetags,
           $LOGFIELD-user,
           $LOGFIELD-unauthuser,
           $LOGFIELD-group,
           $LOGFIELD-srcmac,
           $LOGFIELD-srcip,
           $LOGFIELD-srcintf,
           $LOGFIELD-srcintfrole,
           $LOGFIELD-srcuuid,
           $LOGFIELD-srcname,
           $LOGFIELD-srcinetsvc,
           coalesce(srcname, srcmac) AS dev_src,
           $LOGFIELD-dstmac,
           $LOGFIELD-dstip,
           $LOGFIELD-dstintf,
           $LOGFIELD-dstintfrole,
           $LOGFIELD-dstuuid,
           $LOGFIELD-dstowner,
           $LOGFIELD-srcswversion,
           $LOGFIELD-osname,
           devtype as t_devtype,
           get_devtype(srcswversion, osname, t_devtype) as devtype,
           $LOGFIELD-dstcountry,
           $LOGFIELD-app, 
           $LOGFIELD-vwlname, 
           $LOGFIELD-vwlservice, 
           $LOGFIELD-vwlid,
           $LOGFIELD-catdesc,
           $LOGFIELD-policymode,
           $LOGFIELD-policyid,
           $LOGFIELD-policytype,
           $LOGFIELD-poluuid,
           $LOGFIELD-policyname,
           $LOGFIELD-service, coalesce(vwlname,vwlservice) AS rulename,
           app_group_name(app) AS app_group,
           $LOGFIELD-hostname,
           logflag, 
           $LOGFIELD-unauthuser,
           (CASE WHEN(bitAnd(logflag, 64) > 0) THEN hostname ELSE root_domain(hostname) END) AS domain, hostname,
           $LOGFIELD-accessproxy,
           $LOGFIELD-saasname,
           $LOGFIELD-fctuid,
           $LOGFIELD-appcat,
           multiIf(bitAnd(logflag, 64) > 0, 2, 0) AS flags_a,
           multiIf(appcat='unscanned',1,0) AS flags_b,
           bitOr(flags_a,flags_b) AS flags,
           (CASE WHEN appcat='unscanned' THEN 1 ELSE 0 END) AS d_flags, 
           (CASE WHEN $LOGFIELD_NOALIAS-fctuid IS NOT NULL AND unauthuser IS NOT NULL THEN CONCAT(toString($LOGFIELD_NOALIAS-fctuid), ',', unauthuser) ELSE NULL END) AS avatar,
           ( CASE WHEN epid > 1023 AND euid != 0 THEN CONCAT(toString(epid), ',', toString(euid)) ELSE NULL END) AS epeuid,
           $LOGFIELD-ebtime,
           dtime,
           $LOGFIELD-threatlvls,
           $LOGFIELD-threatwgts,
           $LOGFIELD-threatcnts,
           threatlevel_max(threatlvls) AS threatlvl,
           threatweight_sum(threatwgts, threatcnts) AS threatwgt,
           ( CASE WHEN(bitAnd(logflag, 2) > 0) THEN threatwgt ELSE 0 END) AS threat_block, 
           threatweight_level_sum(4,threatlvls,threatcnts,threatwgts) AS thwgt_cri,
           threatweight_level_sum(3,threatlvls,threatcnts,threatwgts) AS thwgt_hig,
           threatweight_level_sum(2,threatlvls,threatcnts,threatwgts) AS thwgt_med,
           threatweight_level_sum(1,threatlvls,threatcnts,threatwgts) AS thwgt_low,
           $LOGFIELD-sentbyte,
           $LOGFIELD-rcvdbyte, 
           $LOGFIELD-sentdelta,
           $LOGFIELD-rcvddelta,
           coalesce(sentdelta, sentbyte, 0)+coalesce(rcvddelta, rcvdbyte, 0) AS bandwidth,
           coalesce(rcvddelta, rcvdbyte, 0) AS traffic_in,
           coalesce(sentdelta, sentbyte, 0) AS traffic_out,
           CAST(( CASE WHEN(bitAnd(logflag, 2) > 0) THEN 1 ELSE 0 END), 'Int64') AS session_block, 
           CAST(( CASE WHEN(bitAnd(logflag, 1) > 0) THEN 1 ELSE 0 END), 'Int64') AS sessions
      FROM <__root_fgt_traffic and timerange> , metadata
      WHERE bitAnd(logflag, bitOr(1, 32)) > 0 
)
GROUP BY _adomoid, dvid, timescale,
     epid, f_user, group_info, devtype,
     srcmac, srcip, srcintf, srcintfrole, srcuuid, srcinetsvc, dev_src,
     dstip, dstmac, dstintf, dstintfrole, dstuuid, dstowner, dstcountry,
     app_group, rulename, vwlid, flags, d_flags, catdesc,
     policymode, policyid, policytype, poluuid, policyname,
     service, domain, hostname, fctuid,
     accessproxy, saasname, clientdevicetags;

select count(*) from 

mv_name -> 

group by xxx